ist198773@sigma02:~/balls/src$ OMP_NUM_THREADS=4 valgrind ./ballAlg-omp 4 20000000 0 > /dev/null
==30679== Memcheck, a memory error detector
==30679== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==30679== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==30679== Command: ./ballAlg-omp 4 20000000 0
==30679== 
==30679== Warning: set address range perms: large range [0x5006040, 0x2b260040) (undefined)
==30679== Warning: set address range perms: large range [0x59c8a040, 0xdf4c5008) (undefined)
==30679== Warning: set address range perms: large range [0x3e38f040, 0x514bc038) (undefined)
==30679== Invalid write of size 8
==30679==    at 0x10987A: orth_projection._omp_fn.0 (ballAlg-omp.c:143)
==30679==    by 0x49F6E0E: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==30679==    by 0x10B9A3: orth_projection (ballAlg-omp.c:128)
==30679==    by 0x10B9A3: build_node (ballAlg-omp.c:477)
==30679==    by 0x10BF97: main._omp_fn.1 (ballAlg-omp.c:619)
==30679==    by 0x49F6E0E: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==30679==    by 0x10944F: main (ballAlg-omp.c:621)
==30679==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==30679== 
==30679== 
==30679== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==30679==  Access not within mapped region at address 0x0
==30679==    at 0x10987A: orth_projection._omp_fn.0 (ballAlg-omp.c:143)
==30679==    by 0x49F6E0E: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==30679==    by 0x10B9A3: orth_projection (ballAlg-omp.c:128)
==30679==    by 0x10B9A3: build_node (ballAlg-omp.c:477)
==30679==    by 0x10BF97: main._omp_fn.1 (ballAlg-omp.c:619)
==30679==    by 0x49F6E0E: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==30679==    by 0x10944F: main (ballAlg-omp.c:621)
==30679==  If you believe this happened as a result of a stack
==30679==  overflow in your program's main thread (unlikely but
==30679==  possible), you can try to increase the size of the
==30679==  main thread stack using the --main-stacksize= flag.
==30679==  The main thread stack size used in this run was 8388608.
==30679== 
==30679== HEAP SUMMARY:
==30679==     in use at exit: 3,600,005,096 bytes in 18 blocks
==30679==   total heap usage: 19 allocs, 1 frees, 3,600,037,912 bytes allocated
==30679== 
==30679== LEAK SUMMARY:
==30679==    definitely lost: 32 bytes in 1 blocks
==30679==    indirectly lost: 0 bytes in 0 blocks
==30679==      possibly lost: 864 bytes in 3 blocks
==30679==    still reachable: 3,600,004,200 bytes in 14 blocks
==30679==         suppressed: 0 bytes in 0 blocks
==30679== Rerun with --leak-check=full to see details of leaked memory
==30679== 
==30679== For counts of detected and suppressed errors, rerun with: -v
==30679== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault